<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
    xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- Enable method level Spring Security by annotations  -->
    <sec:global-method-security pre-post-annotations="enabled" />  
    <sec:http auto-config="true" use-expressions="true">
		
        <!-- Page level Spring Security : Intercept access to resources in /pages/secure/** -->
        <sec:intercept-url pattern="/pages/secure/**" access="hasRole('ROLE_MODERATOR')" />
        
        <!-- Page level Spring Security : Permit access to resources in /pages/unsecure/** -->
        <sec:intercept-url pattern="/pages/unsecure/**" access="permitAll"/>
        

        <!-- Page level Spring Security : Intercept access to resources in /** -->
     <!--    <sec:intercept-url pattern="/**" access="hasRole('ROLE_MODERATOR')"/> -->
        
  
        <!-- Define login page for Spring Security -->      
        <sec:form-login login-page="/pages/unsecure/login.xhtml"/>
        
        <!-- Define access denied page for Spring Security --> 
        <sec:access-denied-handler error-page="/pages/unsecure/access-denied.xhtml"/>
        
        
        
        <!-- Page level Spring Security : Enable Primefaces -->
        <sec:intercept-url pattern="/javax.faces.resource/**"  access="permitAll"/>
        

        <!-- Define logout properties for Spring Security -->
        <sec:logout invalidate-session="true" delete-cookies="true" logout-success-url="/pages/unsecure/loginn.xhtml" ></sec:logout>
    </sec:http>
   
    <!-- Set customUserDetailsService class as the authentication Manager for Spring Security-->
    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider user-service-ref="customUserDetailsService">
            <sec:password-encoder hash="plaintext"></sec:password-encoder>
        </sec:authentication-provider>
    </sec:authentication-manager>

     <!-- Inject authentication Manager to our LoginBean -->
    <beans:bean id="loginBean" name="loginBean" class="managedController.LoginBean" scope="prototype">
        <beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
    </beans:bean>
</beans:beans>